// This program controls residential elevators

INIT elevatorsList as [elevator1, elevator2]

FOR EACH elevator in elevatorsList 

    SET elevValue 
    SET elevDirection
    SET currentFloor
    SET weightLimit
    SET origin

END FOR


//This is the sequence that sets origin parameters to the elevators

SEQUENCE origin WITH selectedElevator
    
    SET currentFloor to origin
    SET elevDirection to idle

END SEQUENCE


//This is the sequence that determines if the currentWeight of the elevator is greater than its weightLimit

SEQUENCE weightCheck

    OBTAIN weightLimit
    OBTAIN currentWeight

        IF currentWeight is greater or equal to weightLimit
            RETURN FALSE
        ELSE 
            RETURN TRUE

        END IF 

END SEQUENCE


//This is the sequence that determine the user position and direction based on the input he gives to the column controller

SEQUENCE elevatorRequest 
    OBTAIN userFloor 

    IF btnUp is pressed 
        THEN SET userDirection to UP
        RETURN userFloor & userDirection

    ELSE 
        THEN SET userdirection to DOWN
        RETURN userFloor & userDirection
        
    END IF

END SEQUENCE


//This is the sequence that controls the opening of the elevator doors//

SEQUENCE operateDoors WITH selectedElevator and elevDirection

    WHILE elevDirection is UP or DOWN 
        DO close doors 
        SET OpenDoor to FALSE

            IF elevDirection is NULL 
                WAIT
                THEN DO open doors
                SET OpenDoor to TRUE
                WAIT
                THEN DO close doors
                SET OpenDoor to FALSE

                    IF btnOpen is pressed 
                        THEN DO open doors
                        SET OpenDoor to TRUE 
                        WAIT
                        THEN DO close doors
                        SET OpenDoor to FALSE
                    END IF

                    IF btnClose is pressed
                        THEN DO close doors
                        SET OpenDoor to FALSE
                    END IF
            END IF

    END WHILE
END SEQUENCE


//This is the sequence that finds the correct elevator to send to the user after he has called the elevator//

SEQUENCE findElevator WITH floor & userDirection

    FOR EACH elevator in elevatorsList

        OBTAIN elevDirection
        OBTAIN currentFloor of elevator 
        COMPUTE diffElev as userFloor minus currentFloor of elevator

            IF diffElev equals zero AND elevDirection is IDLE and userDirection is UP
                THEN SET elevValue to 1

            ELSE IF diffElev equals zero AND elevDirection is IDLE and userDirection is DOWN
                THEN SET elevValue to 2

            ELSE IF diffElev is greater than zero AND elevDirection is IDLE and userDirection is DOWN
                THEN SET elevValue to 3

            ELSE IF diffElev is greater than zero AND elevDirection is IDLE and userDirection is UP
                THEN SET elevValue to 4

            ELSE IF diffElev is greater than zero AND elevDirection is DOWN and userDirection is DOWN
                THEN SET elevValue to 5

            ELSE IF diffElev is greater than zero AND elevDirection is UP and userDirection is UP 
                THEN SET elevValue to 6
            
            ELSE IF diffElev equals zero AND elevDirection is UP and userDirection is UP 
                THEN SET elevValue to 7
            
            ELSE IF diffElev equals zero AND elevDirection is DOWN and userDirection is DOWN 
                THEN SET elevValue to 8
            
            ELSE IF diffElev is greater than zero AND elevDirection is UP and userDirection is DOWN 
                THEN SET elevValue to 9
            
            ELSE IF diffElev is greater than zero AND elevDirection is DOWN and userDirection is UP
                THEN SET elevValue to 10

            ELSE IF diffElev is equals zero AND elevDirection is UP and userDirection is DOWN 
                SET elevValue to 11
            
            ELSE IF diffElev equals zero AND elevDirection is DOWN and userDirection is UP
                SET elevValue to 12
            END IF

    END FOR 

    COMPUTE elevator lowest elevValue and lowest diffElev as selectedElevator

    RETURN selectedElevator

END SEQUENCE


//This is the sequence that controls the movement of the elevator//

SEQUENCE moveElevator WITH userFloor and selectedElevator

    OBTAIN currentFloor of selectedElevator

     DO selfCheck 
    
        IF selfcheck is false 
            THEN DISPLAY "Elevator out of service."
            BREAK 
        ELSE 
            CONTINUE

        END IF

    DO weightCheck

        IF weightCheck is false
            THEN DISPLAY "Warning! Reduce weight."
            BREAK
        ELSE 
            CONTINUE

        END IF

    WHILE currentFloor is not equal to userFloor 

        IF currentFloor is greater than userFloor 
            THEN SET elevDirection to DOWN 
            DISPLAY arrow pointing DOWN 
            RETURN elevDirection

        ELSE IF currentFloor is smaller than userFloor
            THEN SET elevDirection to UP
            DISPLAY arrow pointing UP
            RETURN elevDirection

        ELSE IF currentFloor equals userFloor
            THEN SET elevDirection to IDLE   
            RETURN elevDirection  

            CALL operateDoors 

        END IF

    END WHILE

    IF elevatorDirection is IDLE for more than 1 minute 
        THEN CALL origin

    END IF

END SEQUENCE



//This is the sequence that controls the whole user interaction OUTSIDE of the elevator

SEQUENCE callElevator

        CALL elevatorRequest RETURNING userFloor and userDirection 

            CALL findElevator WITH userFloor and userDirection RETURNING selectedElevator

                CALL moveElevator WITH userFloor and selectedElevator RETURNING elevDirection

END SEQUENCE



//This is the sequence that controls the whole user interaction INSIDE of the elevator

SEQUENCE requestFloor WITH userFloor    
    
    CALL moveElevator with userFloor AND selectedElevator RETURNING elevDirection
    
END SEQUENCE








